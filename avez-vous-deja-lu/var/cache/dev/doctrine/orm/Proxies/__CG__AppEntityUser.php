<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'pseudo', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'img', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'favorite', '' . "\0" . 'App\\Entity\\User' . "\0" . 'anecdotes', '' . "\0" . 'App\\Entity\\User' . "\0" . 'upVote', '' . "\0" . 'App\\Entity\\User' . "\0" . 'downVote', '' . "\0" . 'App\\Entity\\User' . "\0" . 'known', '' . "\0" . 'App\\Entity\\User' . "\0" . 'unknown'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'pseudo', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'img', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'favorite', '' . "\0" . 'App\\Entity\\User' . "\0" . 'anecdotes', '' . "\0" . 'App\\Entity\\User' . "\0" . 'upVote', '' . "\0" . 'App\\Entity\\User' . "\0" . 'downVote', '' . "\0" . 'App\\Entity\\User' . "\0" . 'known', '' . "\0" . 'App\\Entity\\User' . "\0" . 'unknown'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getPseudo(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPseudo', []);

        return parent::getPseudo();
    }

    /**
     * {@inheritDoc}
     */
    public function setPseudo(string $pseudo): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPseudo', [$pseudo]);

        return parent::setPseudo($pseudo);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getImg(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImg', []);

        return parent::getImg();
    }

    /**
     * {@inheritDoc}
     */
    public function setImg(?string $img): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImg', [$img]);

        return parent::setImg($img);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeImmutable
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTimeImmutable $createdAt): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTimeImmutable
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getFavorite(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFavorite', []);

        return parent::getFavorite();
    }

    /**
     * {@inheritDoc}
     */
    public function addFavorite(\App\Entity\Anecdote $favorite): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFavorite', [$favorite]);

        return parent::addFavorite($favorite);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFavorite(\App\Entity\Anecdote $favorite): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFavorite', [$favorite]);

        return parent::removeFavorite($favorite);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnecdotes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnecdotes', []);

        return parent::getAnecdotes();
    }

    /**
     * {@inheritDoc}
     */
    public function addAnecdote(\App\Entity\Anecdote $anecdote): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAnecdote', [$anecdote]);

        return parent::addAnecdote($anecdote);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAnecdote(\App\Entity\Anecdote $anecdote): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAnecdote', [$anecdote]);

        return parent::removeAnecdote($anecdote);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpVote(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpVote', []);

        return parent::getUpVote();
    }

    /**
     * {@inheritDoc}
     */
    public function addUpVote(\App\Entity\Anecdote $upVote): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUpVote', [$upVote]);

        return parent::addUpVote($upVote);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUpVote(\App\Entity\Anecdote $upVote): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUpVote', [$upVote]);

        return parent::removeUpVote($upVote);
    }

    /**
     * {@inheritDoc}
     */
    public function getDownVote(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDownVote', []);

        return parent::getDownVote();
    }

    /**
     * {@inheritDoc}
     */
    public function addDownVote(\App\Entity\Anecdote $downVote): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDownVote', [$downVote]);

        return parent::addDownVote($downVote);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDownVote(\App\Entity\Anecdote $downVote): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDownVote', [$downVote]);

        return parent::removeDownVote($downVote);
    }

    /**
     * {@inheritDoc}
     */
    public function getKnown(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKnown', []);

        return parent::getKnown();
    }

    /**
     * {@inheritDoc}
     */
    public function addKnown(\App\Entity\Anecdote $known): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addKnown', [$known]);

        return parent::addKnown($known);
    }

    /**
     * {@inheritDoc}
     */
    public function removeKnown(\App\Entity\Anecdote $known): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeKnown', [$known]);

        return parent::removeKnown($known);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnknown(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnknown', []);

        return parent::getUnknown();
    }

    /**
     * {@inheritDoc}
     */
    public function addUnknown(\App\Entity\Anecdote $unknown): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUnknown', [$unknown]);

        return parent::addUnknown($unknown);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUnknown(\App\Entity\Anecdote $unknown): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUnknown', [$unknown]);

        return parent::removeUnknown($unknown);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserIdentifier(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserIdentifier', []);

        return parent::getUserIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

}
